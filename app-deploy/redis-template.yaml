---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-{{ namespace }}-deployment
spec:
  selector:
    matchLabels:
      app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: "{{ images.get_image('redis:latest') }}"
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-{{ args.queue_name }}-persistent-storage
              mountPath: /data
        - name: redis-exporter
          image:  "{{ images.get_image('oliver006/redis_exporter:latest') }}"
          args:
            - "--redis.addr=redis-{{ args.queue_name }}-service"
          ports:
            - containerPort: 9121
      volumes:
        - name: redis-{{ args.queue_name }}-persistent-storage
          persistentVolumeClaim:
            claimName: redis-{{ args.queue_name }}-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: redis-{{ args.queue_name }}-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-{{ args.queue_name }}-exporter-service
  labels:
    app: redis-exporter-{{ args.queue_name }}
spec:
  selector:
    app: redis
  ports:
    - name: metrics
      protocol: TCP
      port: 9121
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-{{ args.queue_name }}-metrics
  labels:
    app: redis-exporter-{{ args.queue_name }}
spec:
  selector:
    matchLabels:
      app: redis-exporter-{{ args.queue_name }}
  namespaceSelector:
    any: true
  endpoints:
    - port: metrics
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-{{ args.queue_name }}-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---